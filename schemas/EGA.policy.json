{
    "$schema": "https://json-schema.org/draft/2019-09/schema",
    "$id": "https://raw.githubusercontent.com/EbiEga/ega-metadata-schema/main/schemas/EGA.policy.json",
    "type": "object",
    "title": "EGA policy metadata schema",
    "meta:version": "0.0.0",
    "$async": true,
    "description": "A policy, also known as Data Access Agreement (DAA), is a contract made between Data User and Data Access Committee. The policy object is expected to contain metadata about such agreement, which should be drafted by the DAC and includes, but is not limited to, details of data use, publication embargoes and storage. Completion of a DAA by the applicant/s should form part of the application process to the DAC. Further details can be found in the EGA-metadata-schema GitHub repository (https://github.com/EbiEga/ega-metadata-schema/tree/main/schemas) and EGA-archive website (https://ega-archive.org/submission/dac/documentation)",
    "required": ["objectId", "objectTitle", "policyDescriptor"],
    "additionalProperties": false,
    "properties": {
      "objectId": {
        "type": "object",
        "title": "Object's IDs block",
        "description": "Node containing the main identifiers of the object (e.g. alias, centerName...), inherited from the common definitions. #! We extend the core object (objectCoreId) by adding a pattern check based on this schema's nature: an policy (by using EGAPolicyIdPattern)", 
        "allOf": [
          {
            "title": "Inherited objectCoreId object",
            "$ref": "./EGA.common-definitions.json#/$defs/objectCoreId"
          },
          {
            "title": "Check that policy EGA ID (EGAP) is correct",
            "properties": {
              "egaAccession": {
                "$ref": "./EGA.common-definitions.json#/$defs/EGAPolicyIdPattern"
              }
            }
          }
        ]        
      },

      "schemaDescriptor": {
        "title": "Schema descriptor node",
        "description": "Inherited schema descriptor node containing metadata about the schemas and standards used to create the JSON document itself.",
        "$ref": "./EGA.common-definitions.json#/$defs/schemaDescriptor"
      },

      "objectTitle": {
        "type": "string",
        "title": "Title of the policy",
        "description": "Free-form title of the policy. Can be used to call out policy records in searches or displays.",
        "examples": [ "EBI colon cancer policy" ]
      },
    
      "policyDescriptor":{
        "type": "object",
        "title": "Policy descriptor",
        "description": "Node containing the full description of the policy, whether it is hosted at some public resourced and referenced here; or directly written here.",
        "additionalProperties": false,
        "properties": {
          "policyReference": {
            "type": "string",
            "title": "Reference to the policy",
            "description": "A publicly accessible reference to the policy, where the updated text of the policy is hosted.",
            "format": "uri",
            "examples": [ 
              "https://github.com/EbiEga/ega-metadata-schema/blob/main/schemas/EGA.policy.json",
              "https://ega-archive.org/submission/dac/documentation" 
            ]
          },
          "policyText": {
            "type": "string",
            "title": "Policy text",
            "description": "Text describing in detail the Data Access Agreement (DAA) of the policy.",
            "examples": [
              "The data is fully available upon request with the data-access committee of this study.",
              "Access to data generated is available by emailing application to the Data Access Committee and will be granted to qualified investigators for appropriate use.\\nThe following two documents may be required by the Data Access Committee.\\n1) DATA ACCESS AGREEMENT\\nIn signing this agreement, You are agreeing to be bound by the terms and conditions of access set out in this agreement.\\nDefinitions:\\n- Data means all and any human genetic data obtained related to the 'Study on the proliferation history of lung adenomas'.\\n- User means a researcher whose User Institution has previously completed this Data Access Agreement and has received acknowledgment of its acceptance.\\n- User Institution means the organization at which the User is employed, affiliated or enrolled.\\nYou agree to use the Data only for the advancement of medical research, according to the consent obtained from sample donors.\\n- Publications means, without limitation, articles published in print journals, electronic journals, reviews, books, posters and other written and verbal presentations of research.\\nYou agree not to use the data for the creation of products for sale or for any commercial purpose.\\nYou agree to preserve, at all times, the confidentiality of any information related to Data and to not transfer or disclose the Data.\\nYou agree to use the data for the approved purpose and project described in your Application.\\nYou agree to acknowledge in any work based in whole or part on the Data, the published paper from which the Data derives.\\nFor and on behalf of User:\\n Report the name of Applicants, Signature of Applicants and Date.\\nFor and on behalf of User Institution:\\nReport the name of Institutional Authority, his/her and Date.\\n\\n2) DATA ACCESS APPLICATION FORM:\\nApplications for access to data can be submitted at any time. The Data Access Committee will consider applications on a rolling basis and aim to provide a decision within one months of receipt. The Application must include:\\n- A full postal and email address for each Applicant. PhD student applicants must include their supervisors as a co-applicant and provide their full contact details.\\n- Title of the project.\\n- A clear description of the project and its specific aims, including specific details of what You plan to do with the data and including key references.\\n- Signature, name and date of each Applicant.\\n- Data Access Agreement dated and signed."
            ]
          }          
        },
        "anyOf": [
          {
            "title": "Either the policy reference is given",
            "required": ["policyReference"]
          },
          {
            "title": "Or the policy text is given",
            "required": ["policyText"]
          }
        ]
      },

      "duoCodes": {
        "type": "array",
        "title": "Data Use Ontology (DUO) codes",
        "description": "Collection of Data Use Ontology (DUO) codes. These allow to semantically tag datasets (bound by policies) with restriction about their usage, improving their discoverability based on the authorization level of users, or intended usage. See more info at https://obofoundry.org/ontology/duo.html and search for DUO codes at https://www.ebi.ac.uk/ols/ontologies/duo",
        "minItems": 1,
        "additionalProperties": false,
        "uniqueItems": true,
        "items": {
          "type": "object",
          "title": "Data Use Ontology (DUO)",
          "description": "Single Data Use Ontology (DUO) code.",
          "allOf": [
            {
              "title": "Inherited ontologyTerm structure of termId and termLabel",
              "$ref": "./EGA.common-definitions.json#/$defs/ontologyTerm"
            }
          ],
          "properties": {        
            "termId": {
              "title": "Ontology constraints for this specific termId",
              "anyOf": [
                {
                  "graphRestriction":  {
                    "ontologies" : ["obo:duo"],
                    "classes": ["DUO:0000001"],
                    "relations": ["rdfs:subClassOf"],
                    "direct": false,
                    "include_self": false
                  }
                },
                {
                  "graphRestriction":  {
                    "ontologies" : ["obo:duo"],
                    "classes": ["DUO:0000017"],
                    "relations": ["rdfs:subClassOf"],
                    "direct": false,
                    "include_self": false
                  }
                },
                {
                  "graphRestriction":  {
                    "ontologies" : ["obo:duo"],
                    "classes": ["OBI:0000066"],
                    "relations": ["rdfs:subClassOf"],
                    "direct": false,
                    "include_self": false
                  }
                }
              ],              
              "examples": [ "DUO:0000046", "DUO:0000028", "DUO:0000032" ]
            }
          }
        }
      },

      "policyRelationships": {
        "type": "array",
        "title": "Policy relationships",
        "description": "Comprises metadata (e.g. Source or Target) of a directional association between two entities. This relationships node contains all the possible relationships between metadata objects, both outside of (e.g. an Array Design Format that was submitted to ArrayExpress being linked to their microarray data within EGA) and within (e.g. a policy being linked to a policy) the EGA.",
        "minItems": 1,
        "additionalProperties": false,
        "uniqueItems": true,
        "items": { 
          "allOf": [
            {
              "title": "Inherited relationship node",
              "$ref": "./EGA.common-definitions.json#/$defs/relationshipObject"
            },
            {
              "title": "Relationship constraints for a policy",
              "description": "Not all possible relationships between objects are allowed (e.g. an individual should not be linked to a policy). This node contains the restricted relationships that can be given for a policy.",
              "anyOf": [
                {
                  "title": "Allowed relationships of type referencedBy (main ones)",
                  "allOf": [
                    {
                      "$ref": "./EGA.common-definitions.json#/$defs/rTypeReferencedBy"
                    },
                    {
                      "anyOf": [
                        {
                          "$ref": "./EGA.common-definitions.json#/$defs/rTargetDataset"
                        },
                        {
                          "$ref": "./EGA.common-definitions.json#/$defs/rSourceDAC"
                        },
                        {
                          "$ref": "./EGA.common-definitions.json#/$defs/rSourceSubmission"
                        }
                      ]
                    }
                  ]                  
                },
                {
                  "title": "Allowed relationships of type groupedWith, sameAs (optional ones)",
                  "allOf": [
                    {
                      "anyOf": [
                        {
                          "$ref": "./EGA.common-definitions.json#/$defs/rTypeGroupedWith"
                        },
                        {
                          "$ref": "./EGA.common-definitions.json#/$defs/rTypeSameAs"
                        }
                      ]
                    },
                    {
                      "anyOf": [
                        {
                          "$ref": "./EGA.common-definitions.json#/$defs/rSourcePolicy"
                        },
                        {
                          "$ref": "./EGA.common-definitions.json#/$defs/rTargetPolicy"
                        }
                      ]
                    }
                  ]
                },
                {
                  "title": "Relationships of external accessions and URLs (optional ones)",
                  "description": "Almost any relationship is imaginable with external accessions and URLs.",
                  "allOf": [
                    {
                      "anyOf": [
                        {
                          "$ref": "./EGA.common-definitions.json#/$defs/rTypeChildOf"
                        },
                        {
                          "$ref": "./EGA.common-definitions.json#/$defs/rTypeFamilyRelationshipWith"
                        },
                        {
                          "$ref": "./EGA.common-definitions.json#/$defs/rTypeGroupedWith"
                        },
                        {
                          "$ref": "./EGA.common-definitions.json#/$defs/rTypeSameAs"
                        },
                        {
                          "$ref": "./EGA.common-definitions.json#/$defs/rTypeReferencedBy"
                        },
                        {
                          "$ref": "./EGA.common-definitions.json#/$defs/rTypeDevelopsFrom"
                        },
                        {
                          "$ref": "./EGA.common-definitions.json#/$defs/rTypeMemberOf"
                        },
                        {
                          "$ref": "./EGA.common-definitions.json#/$defs/rTypeIsAfter"
                        }
                      ]
                    },
                    {
                      "anyOf": [
                        {
                          "$ref": "./EGA.common-definitions.json#/$defs/rSourceExternalAccession"
                        },
                        {
                          "$ref": "./EGA.common-definitions.json#/$defs/rSourceExternalURL"
                        },
                        {
                          "$ref": "./EGA.common-definitions.json#/$defs/rTargetExternalAccession"
                        },
                        {
                          "$ref": "./EGA.common-definitions.json#/$defs/rTargetExternalURL"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ] 
        },
        "contains": {
          "title": "Constraint to have at least one 'submission' relationship",
          "$ref": "./EGA.common-definitions.json#/$defs/rConstraintOneSourcedSubmission"
        }
      },

      "policyAttributes": {
        "type": "array",
        "title": "Policy custom attributes",
        "description": "Custom attributes of a policy: reusable attributes to encode tag-value pairs (e.g. Tag being 'Targeted loci' and its Value '5:63256183-63258334') with optional units (e.g. 'base pairs'). Its properties are inherited from the common-definitions.json schema.",
        "minItems": 1,
        "additionalProperties": false,
        "uniqueItems": true,
        "items": { 
          "$ref": "./EGA.common-definitions.json#/$defs/customAttribute" 
        }
      }
    }      
  }