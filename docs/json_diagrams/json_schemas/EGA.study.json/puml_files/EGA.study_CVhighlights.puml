@startjson
#highlight "properties" / "schemaDescriptor" / "properties" / "objectType" / "enum"
#highlight "properties" / "studyTypes" / "items" / "enum"
#highlight "properties" / "studyDesigns" / "items" / "enum"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rType" / "enum"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "properties" / "objectType" / "enum"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "1" / "properties" / "objectType" / "enum"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "2" / "properties" / "objectType" / "enum"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "3" / "properties" / "objectType" / "enum"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "4" / "properties" / "objectType" / "enum"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "5" / "properties" / "objectType" / "enum"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "6" / "properties" / "objectType" / "enum"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "7" / "properties" / "objectType" / "enum"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "8" / "properties" / "objectType" / "enum"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "9" / "properties" / "objectType" / "enum"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "10" / "properties" / "objectType" / "enum"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "11" / "properties" / "objectType" / "enum"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "12" / "properties" / "objectType" / "enum"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "properties" / "objectType" / "enum"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "1" / "properties" / "objectType" / "enum"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "2" / "properties" / "objectType" / "enum"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "3" / "properties" / "objectType" / "enum"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "4" / "properties" / "objectType" / "enum"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "5" / "properties" / "objectType" / "enum"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "6" / "properties" / "objectType" / "enum"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "7" / "properties" / "objectType" / "enum"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "8" / "properties" / "objectType" / "enum"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "9" / "properties" / "objectType" / "enum"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "10" / "properties" / "objectType" / "enum"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "11" / "properties" / "objectType" / "enum"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "12" / "properties" / "objectType" / "enum"
#highlight "properties"
#highlight "properties" / "schemaDescriptor"
#highlight "properties" / "schemaDescriptor" / "properties"
#highlight "properties" / "schemaDescriptor" / "properties" / "objectType"
#highlight "properties" / "studyTypes"
#highlight "properties" / "studyTypes" / "items"
#highlight "properties" / "studyDesigns"
#highlight "properties" / "studyDesigns" / "items"
#highlight "properties" / "studyRelationships"
#highlight "properties" / "studyRelationships" / "items"
#highlight "properties" / "studyRelationships" / "items" / "allOf"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rType"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "properties"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "properties" / "objectType"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0" / "anyOf"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "1"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "1" / "properties"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "1" / "properties" / "objectType"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "2"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "2" / "properties"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "2" / "properties" / "objectType"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "3"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "3" / "properties"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "3" / "properties" / "objectType"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "4"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "4" / "properties"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "4" / "properties" / "objectType"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "5"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "5" / "properties"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "5" / "properties" / "objectType"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "6"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "6" / "properties"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "6" / "properties" / "objectType"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "7"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "7" / "properties"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "7" / "properties" / "objectType"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "8"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "8" / "properties"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "8" / "properties" / "objectType"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "9"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "9" / "properties"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "9" / "properties" / "objectType"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "10"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "10" / "properties"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "10" / "properties" / "objectType"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "11"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "11" / "properties"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "11" / "properties" / "objectType"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "12"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "12" / "properties"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rSource" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "12" / "properties" / "objectType"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "properties"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "properties" / "objectType"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0" / "anyOf"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "1"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "1" / "properties"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "1" / "properties" / "objectType"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "2"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "2" / "properties"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "2" / "properties" / "objectType"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "3"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "3" / "properties"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "3" / "properties" / "objectType"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "4"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "4" / "properties"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "4" / "properties" / "objectType"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "5"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "5" / "properties"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "5" / "properties" / "objectType"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "6"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "6" / "properties"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "6" / "properties" / "objectType"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "7"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "7" / "properties"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "7" / "properties" / "objectType"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "8"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "8" / "properties"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "8" / "properties" / "objectType"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "9"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "9" / "properties"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "9" / "properties" / "objectType"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "10"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "10" / "properties"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "10" / "properties" / "objectType"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "11"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "11" / "properties"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "11" / "properties" / "objectType"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "12"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "12" / "properties"
#highlight "properties" / "studyRelationships" / "items" / "allOf" / "0" / "properties" / "rTarget" / "allOf" / "0" / "allOf" / "0" / "anyOf" / "12" / "properties" / "objectType"

{
    "$schema": "https://json-schema.org/draft/2019-09/schema",
    "$id": "https://raw.githubusercontent.com/EbiEga/ega-metadata-schema/main/schemas/EGA.study.json",
    "type": "object",
    "title": "EGA study metadata schema",
    "meta:version": "0.0.0",
    "$async": true,
    "description": "Metadata schema used by the European Genome-phenome Archive (EGA) to validate \\nits Study metadata object. This object is intended to contain metadata about the \\ncompilation of examinations, analyses or critical inspection of a particular \\nsubject. In other words, a Study is a container of experiments and analyses of \\nany nature (including Array data) grouped by a common goal or investigation. \\nThey often draw together data from a range of datasets and are represented in \\npublication. For instance, an example would be a case-control study on cancer \\npatients and healthy individuals. Further details can be found in the \\nEGA-metadata-schema GitHub repository \\n(https://github.com/EbiEga/ega-metadata-schema/tree/main/schemas) and \\nEGA-archive website (https://ega-archive.org/studies)",
    "required": [
        "objectId",
        "objectTitle",
        "studyTypes",
        "studyDesigns"
    ],
    "additionalProperties": false,
    "properties": {
        "objectId": {
            "type": "object",
            "title": "Object's IDs block",
            "description": "Node containing the main identifiers of the object (e.g. alias, centerName...), \\ninherited from the common definitions. #! We extend the core object \\n(objectCoreId) by adding a pattern check based on this schema's nature: a study \\n(by using EGAStudyIdPattern)",
            "allOf": [
                {
                    "type": "object",
                    "title": "Core identifiers of an object",
                    "description": "Base definition containing the properties (e.g. Sample's alias) of a minimal \\nidentification layer of an EGA object (e.g. Sample).",
                    "additionalProperties": false,
                    "properties": {
                        "alias": {
                            "type": "string",
                            "title": "Alias of an object",
                            "description": "Submitter designated name (e.g. 'my_sample_J13') for the object (e.g. Sample). \\nThe name must be unique within the submission account (e.g. 'ega-box-79'), since \\nthe aliases and submission accounts are concatenated within our database to \\nobtain the unique alias (e.g. 'ega-box-79::my_sample_J13').",
                            "minLength": 1,
                            "examples": [
                                "my_sample_J13"
                            ]
                        },
                        "centerName": {
                            "type": "string",
                            "title": "Center name of the submitter",
                            "description": "Center name (e.g. 'EBI-TEST') associated to the submitter. In other words, it is \\nthe acronym of the submitter's account (provided by the HelpDesk team).",
                            "minLength": 1,
                            "examples": [
                                "EBI-TEST"
                            ]
                        },
                        "egaAccession": {
                            "type": "string",
                            "title": "EGA's accession of the object",
                            "description": "The object accession (i.e. unique identifier) assigned by the archive (EGA). \\nObject accessions can be found in the 'Identifiers' section of the EGA-archive \\nwebsite (https://ega-archive.org/metadata/how-to-use-the-api) and commonly start \\nwith EGA, followed by the distinctive letter of the object and finally the \\nnumeric ID of the instance.",
                            "examples": [
                                "EGAN00003245489"
                            ]
                        },
                        "externalAccessions": {
                            "type": "array",
                            "title": "External accessions array",
                            "description": "External accession node to reference objects in other archives (e.g. an already \\nexisting sample at BioSamples).",
                            "minItems": 1,
                            "additionalProperties": false,
                            "uniqueItems": true,
                            "items": {
                                "type": "object",
                                "title": "Object External accession",
                                "description": "External accession property defining a reference to an external record in \\nanother resource. For example, a reference to a sequence deposited in NCBI's \\nNucleotide database (e.g. 'https://identifiers.org/nucleotide:T35715.1'); or a \\nsample record in BioSamples (e.g. \\n'https://identifiers.org/biosample:SAMEA7616999').",
                                "additionalProperties": false,
                                "properties": {
                                    "objectExternalAccessionIdentifier": {
                                        "type": "object",
                                        "title": "Identifier of the external accession",
                                        "description": "Unique identifier of an external record. Its 'termId' (e.g. \\n'biosample:SAMEA7616999', 'pubmed:30962759', 'biostudies:S-EPMC3314381', etc.) \\nshall follow CURIE format of ``prefix``:``accession``, where: (1) the prefix \\n(e.g. 'biosample') is unique and assigned to the external resource at \\nidentifiers.org; (2) and the unique accession of the object (e.g. SAMEA7616999) \\nshould resolve to an existing record within the resource. If in doubt, use \\nidentifiers.org to resolve your external accession: 'https://identifiers.org/' + \\n'termId', e.g. 'https://identifiers.org/biosample:SAMEA7616999'",
                                        "allOf": [
                                            {
                                                "type": "object",
                                                "title": "Ontology term",
                                                "description": "This property represents an ontology term (a.k.a. class). It consists on two \\nproperties: the term identifier (termId) and its label (termLabel). This \\nproperty and its structure is inherited across many other elements in the \\nschemas. It is there, when inherited, where the real ontology constraint is put \\nin place (e.g. using 'graphRestriction' keywords). Based on phenopacket's [OntologyClass](https://phenopacket-schema.readthedocs.io/en/latest/ontologyclass.html)",
                                                "additionalProperties": false,
                                                "required": [
                                                    "termId",
                                                    "termLabel"
                                                ],
                                                "properties": {
                                                    "termId": {
                                                        "type": "string",
                                                        "title": "ID of the term",
                                                        "description": "The identifier of an ontology term must be in CURIE format (check property \\n'curieGeneralPattern'). Whether a specific term is valid or not according to an \\nontology hierarchy is checked at each specific termId using ontology validation \\nkeywords (e.g. 'graphRestriction').",
                                                        "minLength": 1,
                                                        "allOf": [
                                                            {
                                                                "type": "string",
                                                                "title": "Compact URI (CURIE) pattern",
                                                                "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE \\nstring has the structure ``prefix``:``reference``, as defined by the W3C syntax. \\nEven though we do not restrict prefixes, we recommend that the term used as \\n``prefix`` is uniformely resolved. In other words, it is better to use prefixes \\n(e.g. 'ensembl') from identifiers.org.",
                                                                "minLength": 1,
                                                                "pattern": "^\\w[^:]*:.+$",
                                                                "examples": [
                                                                    "ensembl:ENSG00000139618",
                                                                    "HGNC:11535",
                                                                    "data:1026",
                                                                    "EFO:0003815"
                                                                ]
                                                            }
                                                        ],
                                                        "examples": [
                                                            "MONDO:0100096",
                                                            "EFO:0003101",
                                                            "EFO:0005518",
                                                            "EFO:0002944",
                                                            "EFO:0003813"
                                                        ]
                                                    },
                                                    "termLabel": {
                                                        "type": "string",
                                                        "title": "Label of the term",
                                                        "description": "The label of a term is the human-readable string associated with the identifier. \\nIt is not required that it matches the label of the termId within the referenced \\nontology, although it should. This is due to the fact that the source of truth \\nwill always be the termId, and not the label, which adds more context.",
                                                        "minLength": 1,
                                                        "examples": [
                                                            "COVID-19",
                                                            "Axila skin",
                                                            "bone marrow cell",
                                                            "astrocyte",
                                                            "oligodendrocyte",
                                                            "Unknown",
                                                            "Unaffected",
                                                            "homo sapiens"
                                                        ]
                                                    }
                                                }
                                            }
                                        ]
                                    },
                                    "objectExternalAccessionURI": {
                                        "type": "string",
                                        "title": "URI of the external accession",
                                        "description": "Full or partial URL/URI of the external accession, for systems to resolve it. \\nShould only be used in case identifiers.org does not contain a namespace for the \\nrequired resource or the mapping to the URI from its identifier is faulty.",
                                        "allOf": [
                                            {
                                                "type": "string",
                                                "title": "URL/URI pattern",
                                                "description": "This object exists to hold the pattern that a URL or URI should have. For it to \\nbe referenced elsewhere within this (or other) JSON schema.",
                                                "pattern": "^((http|https)://)(www.)?[a-zA-Z0-9@:%._\\+~#?&//=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%._\\+~#?&//=]*)$",
                                                "examples": [
                                                    "https://phenopacket-schema.readthedocs.io/en/latest/externalreference.html",
                                                    "https://www.ebi.ac.uk/arrayexpress/experiments/E-MEXP-1712/",
                                                    "https://www.geeksforgeeks.org/check-if-an-url-is-valid-or-not-using-regular-expression/"
                                                ]
                                            }
                                        ],
                                        "examples": [
                                            "https://www.ebi.ac.uk/biosamples/samples/SAMN11716999",
                                            "https://pubmed.ncbi.nlm.nih.gov/19491253",
                                            "https://www.ebi.ac.uk/arrayexpress/experiments/E-MEXP-1712/"
                                        ]
                                    },
                                    "objectExternalAccessionDescription": {
                                        "type": [
                                            "string",
                                            "number"
                                        ],
                                        "title": "Description of the external accession",
                                        "description": "Optional description of the external accession, used to add context to the \\nidentifier if applicable.",
                                        "examples": [
                                            "taken from biosample temporarily",
                                            "Ensembl's part of the accessions",
                                            "first",
                                            2,
                                            "Recurrent Erythema Nodosum in a Child with a SHOC2 Gene Mutation"
                                        ]
                                    }
                                },
                                "anyOf": [
                                    {
                                        "title": "Either the identifier is needed",
                                        "required": [
                                            "objectExternalAccessionIdentifier"
                                        ]
                                    },
                                    {
                                        "title": "Or the reference is needed",
                                        "required": [
                                            "objectExternalAccessionURI"
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    "anyOf": [
                        {
                            "title": "Check core IDs: combination of Alias and Center name",
                            "required": [
                                "alias",
                                "centerName"
                            ]
                        },
                        {
                            "title": "Check core IDs: EGA accession ID",
                            "required": [
                                "egaAccession"
                            ]
                        },
                        {
                            "title": "Check core IDs: external accessions",
                            "required": [
                                "externalAccessions"
                            ]
                        }
                    ]
                },
                {
                    "title": "Check that study EGA ID (EGAS) is correct",
                    "properties": {
                        "egaAccession": {
                            "type": "string",
                            "title": "Pattern of an EGA study's ID (EGAS...)",
                            "pattern": "^EGAS[0-9]{11}$",
                            "examples": [
                                "EGAS00001004508"
                            ]
                        }
                    }
                }
            ]
        },
        "schemaDescriptor": {
            "type": "object",
            "title": "Schema descriptor",
            "description": "This node is intended to be used to describe the schemas and standards that a \\nJSON document was based on. For instance, if a sample.json document was created \\nto be validated against EGA.sample.json schema version 1.0.0, such information \\nshould be reflected in this block. This way, both a human and a machine can \\ninterpret and validate the JSON document efficiently, without the need of \\nguessing versions.",
            "additionalProperties": false,
            "required": [
                "objectType",
                "describedBySchemaUri",
                "objectSchemaVersion",
                "commonSchemaVersion"
            ],
            "properties": {
                "objectType": {
                    "type": "string",
                    "title": "Type of the object",
                    "description": "Type of the object (e.g. 'sample') the JSON document describes.",
                    "enum": [
                        "experiment",
                        "study",
                        "sample",
                        "individual",
                        "submission",
                        "assay",
                        "dataset",
                        "analysis",
                        "policy",
                        "DAC",
                        "protocol",
                        "object-set"
                    ]
                },
                "describedBySchemaUri": {
                    "type": "string",
                    "title": "URI of the schema",
                    "description": "URI of the schema (e.g. 'https://github.com/EbiEga/ega-metadata-schema/tree/main/schemas/EGA.sample.json') \\nthat describes the JSON document (e.g. 'my_sample.json')",
                    "pattern": "^https://github\\.com/EbiEga/ega-metadata-schema/tree/main/schemas/EGA\\..+\\.json$",
                    "examples": [
                        "https://github.com/EbiEga/ega-metadata-schema/tree/main/schemas/EGA.sample.json"
                    ]
                },
                "objectSchemaVersion": {
                    "type": "string",
                    "title": "Version of the object's schema",
                    "description": "The version of the object's schema, the one specific for the object the JSON \\ndocument corresponds to (e.g. 'EGA.sample.json'), not the common definitions \\nschema's version (i.e. 'EGA.common-definitions.json').",
                    "allOf": [
                        {
                            "type": "string",
                            "title": "Semantic versioning pattern",
                            "description": "This object exists to hold the pattern that semantic versioning has, for it to \\nbe referenced elsewhere within this (or other) JSON schema. For further details \\nabout semantic versioning check 'https://semver.org/'",
                            "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$",
                            "examples": [
                                "2.5.1"
                            ]
                        }
                    ]
                },
                "commonSchemaVersion": {
                    "type": "string",
                    "title": "Version of the common definition's schema",
                    "description": "The version of the common definition's schema, the one containing all shared \\ndefinitions (i.e. 'EGA.common-definitions.json'), not the one specific to the \\nobject described by the JSON document (e.g. 'EGA.sample.json').",
                    "allOf": [
                        {
                            "type": "string",
                            "title": "Semantic versioning pattern",
                            "description": "This object exists to hold the pattern that semantic versioning has, for it to \\nbe referenced elsewhere within this (or other) JSON schema. For further details \\nabout semantic versioning check 'https://semver.org/'",
                            "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$",
                            "examples": [
                                "2.5.1"
                            ]
                        }
                    ]
                }
            }
        },
        "objectTitle": {
            "type": "string",
            "title": "Title of the study",
            "description": "Short free-form text that can be used to call out study records in searches or \\ndisplays.",
            "examples": [
                "EBI test case-control study for cancer"
            ]
        },
        "objectDescription": {
            "type": "string",
            "title": "Description of the study",
            "description": "An in-depth description of the study, including its overall purpose, goals, \\nscope or nature.",
            "examples": [
                "EBI genome-wide case-control association study for Hypertension (HT) using seven \\ndisease collections together with the 1958 Spanish Birth Cohort and the EU \\nNational Blood Service collections as controls."
            ]
        },
        "studyTypes": {
            "type": "array",
            "title": "studyTypes array",
            "description": "List of study types. Contains specific keywords (e.g. 'COVID-19') as items that \\ncan be associated to the study, providing an overall view of its purpose.",
            "additionalProperties": false,
            "uniqueItems": true,
            "minItems": 1,
            "items": {
                "type": "string",
                "title": "Study type",
                "description": "One of the types of the study, expressing the overall purpose of the study. Term \\nchosen from a list of controlled vocabulary (CV). If you cannot find your term \\nin the CV list, please create an issue at our [metadata GitHub \\nrepository](https://github.com/EbiEga/ega-metadata-schema/issues/new/choose) \\nproposing its addition. The CV was inherited from ENA's study types.",
                "enum": [
                    "whole genome sequencing",
                    "metagenomics",
                    "transcriptome analysis",
                    "resequencing",
                    "epigenetics",
                    "synthetic genomics",
                    "forensic",
                    "paleo-genomics",
                    "gene regulation",
                    "cancer genomics",
                    "population genomics",
                    "RNASeq",
                    "exome sequencing",
                    "pooled clone sequencing",
                    "COVID-19",
                    "xenograft"
                ],
                "meta:enum": {
                    "whole genome sequencing": "[topic:3673] laboratory technique to sequence the complete DNA sequence of an \\norganism's genome at a single time",
                    "metagenomics": "[topic:3174]: The study of genetic material recovered from environmental \\nsamples, and associated environmental data",
                    "transcriptome analysis": "[EFO:0009865]: sequencing and characterization of transcription elements",
                    "resequencing": "[operation:3923]: Laboratory experiment to identify the differences between a \\nspecific genome (of an individual) and a reference genome (developed typically \\nfrom many thousands of individuals). WGS re-sequencing is used as golden \\nstandard to detect variations compared to a given reference genome, including \\nsmall variants (SNP and InDels) as well as larger genome re-organisations (CNVs, \\ntranslocations, etc.). ows re-sequencing of complete genomes of any given \\norganism with high resolution and high accuracy",
                    "epigenetics": "[topic:3295]: study of heritable changes, for example in gene expression or \\nphenotype, caused by mechanisms other than changes in the DNA sequence",
                    "synthetic genomics": "Sequencing of modified, synthetic, or transplanted genomes",
                    "forensic": "[OMIT:0025593]: genetic samples to help identify crime victims, perpetrators, or \\nfamily relationships",
                    "paleo-genomics": "[topic:3943]: The reconstruction and analysis of genomic information in extinct \\nspecies",
                    "gene regulation": "[topic:0204]: The regulation of gene expression",
                    "cancer genomics": "Study of cancer genomics",
                    "population genomics": "[topic:3796]: Large-scale study (typically comparison) of DNA sequences of \\npopulations",
                    "RNASeq": "[EFO:0008896]: a method that involves purifying RNA and making cDNA, followed by \\nhigh-throughput sequencing",
                    "exome sequencing": "[EFO:0005396]: exome sequencing, also known as whole exome sequencing (WES), is \\na genomic technique for sequencing all of the protein-coding regions of genes in \\na genome (known as the exome). Exons (the subset of DNA that encodes proteins) \\nare selected, and the exonic DNA is then sequenced using any high-throughput DNA \\nsequencing technology",
                    "pooled clone sequencing": "[EFO:0003741]: An assay in which DNA is the input molecule derived from pooled \\nclones (for example BACs and Fosmids) is sequenced using high throughput \\ntechnology using shotgun methodology",
                    "COVID-19": "[MONDO:0100096]: A study related to the COVID-19 disease, caused infection with \\nsevere acute respiratory syndrome coronavirus 2",
                    "xenograft": "[EFO:0003942]: Transplantation between animals of different species"
                }
            }
        },
        "studyDesigns": {
            "type": "array",
            "title": "studyDesigns array",
            "description": "List of study designs (a.k.a. experimental designs). Contains specific keywords \\n(e.g. 'RNA stability design') as items that can be associated to the study, \\nproviding an overall view of the method of investigating particular types of \\nresearch questions or solving particular types of problems.",
            "additionalProperties": false,
            "uniqueItems": true,
            "minItems": 1,
            "items": {
                "type": "string",
                "title": "Enumeration of design keywords",
                "meta:propertyCurie": "EFO:0001426",
                "description": "An object containing the enumeration of multiple study-design keywords, to be \\ninherited at their respective nodes. Term chosen from a list of controlled \\nvocabulary (CV). If you cannot find your term in the CV list, please create an \\nissue at our [metadata GitHub \\nrepository](https://github.com/EbiEga/ega-metadata-schema/issues/new/choose) \\nproposing its addition.",
                "enum": [
                    "RNA stability design",
                    "binding site identification design",
                    "case control design",
                    "cell component comparison design",
                    "cell cycle design",
                    "cell type comparison design",
                    "cellular modification design",
                    "clinical history design",
                    "compound treatment design",
                    "cross sectional design",
                    "development or differentiation design",
                    "disease state design",
                    "dose response design",
                    "twin design",
                    "genetic modification design",
                    "genotype design",
                    "growth condition design",
                    "imprinting design",
                    "injury design",
                    "innate behavior design",
                    "organism part comparison design",
                    "organism status design",
                    "pathogenicity design",
                    "population based design",
                    "sex design",
                    "species design",
                    "stimulus or stress design",
                    "strain or line design",
                    "time series design",
                    "family based design",
                    "genotyping design",
                    "mobile element identification design",
                    "operon identification design",
                    "secreted protein identification design",
                    "translational bias design",
                    "transposable element identification design",
                    "hardware variation design",
                    "normalization testing design",
                    "operator variation design",
                    "optimization design",
                    "quality control testing design",
                    "reference design",
                    "replicate design",
                    "software variation design",
                    "validation by real time PCR design",
                    "validation by reverse transcription PCR design"
                ],
                "meta:enum": {
                    "RNA stability design": "[EFO:0001783]",
                    "binding site identification design": "[EFO:0004664]",
                    "case control design": "[EFO:0001427]",
                    "cell component comparison design": "[EFO:0001743]",
                    "cell cycle design": "[EFO:0001744]",
                    "cell type comparison design": "[EFO:0001745]",
                    "cellular modification design": "[EFO:0004666]",
                    "clinical history design": "[EFO:0001780]",
                    "compound treatment design": "[EFO:0001755]",
                    "cross sectional design": "[EFO:0001428]",
                    "development or differentiation design": "[EFO:0001746]",
                    "disease state design": "[EFO:0001756]",
                    "dose response design": "[EFO:0001757]",
                    "twin design": "[EFO:0001431]",
                    "genetic modification design": "[EFO:0001758]",
                    "genotype design": "[EFO:0001748]",
                    "growth condition design": "[EFO:0001759]",
                    "imprinting design": "[EFO:0001747]",
                    "injury design": "[EFO:0001760]",
                    "innate behavior design": "[EFO:0001749]",
                    "organism part comparison design": "[EFO:0001750]",
                    "organism status design": "[EFO:0001751]",
                    "pathogenicity design": "[EFO:0001761]",
                    "population based design": "[EFO:0001430]",
                    "sex design": "[EFO:0001752]",
                    "species design": "[EFO:0001753]",
                    "stimulus or stress design": "[EFO:0001762]",
                    "strain or line design": "[EFO:0001754]",
                    "time series design": "[EFO:0001779]",
                    "family based design": "[EFO:0001429]",
                    "genotyping design": "[EFO:0001784]",
                    "mobile element identification design": "[EFO:0005693]",
                    "operon identification design": "[EFO:0001785]",
                    "secreted protein identification design": "[EFO:0001786]",
                    "translational bias design": "[EFO:0001787]",
                    "transposable element identification design": "[EFO:0005692]",
                    "hardware variation design": "[EFO:0001767]",
                    "normalization testing design": "[EFO:0001771]",
                    "operator variation design": "[EFO:0001772]",
                    "optimization design": "[EFO:0001773]",
                    "quality control testing design": "[EFO:0001774]",
                    "reference design": "[EFO:0001775]",
                    "replicate design": "[EFO:0001776]",
                    "software variation design": "[EFO:0001778]",
                    "validation by real time PCR design": "[OBI:0001166]",
                    "validation by reverse transcription PCR design": "[OBI:0001162]"
                },
                "examples": [
                    "RNA stability design"
                ]
            }
        },
        "studyRelationships": {
            "type": "array",
            "title": "Study relationships",
            "description": "Comprises metadata (e.g. Source or Target) of a directional association between \\ntwo entities. This relationships node contains all the possible relationships \\nbetween metadata objects, both outside of (e.g. an Array Design Format that was \\nsubmitted to ArrayExpress being linked to their microarray data within EGA) and \\nwithin (e.g. an ArrayExperiment being linked to a study) the EGA.",
            "minItems": 1,
            "additionalProperties": false,
            "uniqueItems": true,
            "items": {
                "allOf": [
                    {
                        "type": "object",
                        "title": "EGA Relationships object",
                        "description": "Object containing the base metadata attributes of a relationship object in the \\nEGA. Comprises metadata (e.g. Source or Target) of a directional association \\nbetween two entities. One of the entitis **needs** to be the current instance. \\nFor instance, a study JSON document should not contain relationships between a \\nsample and an individual. Therefore, only one end of the relationship is given: \\nif the source is present, the target is inferred to be the current instance; if \\nthe target is given, then it's the source the one inferred as the current \\ninstance. Examples of common relationships: (1) a sample being referenced in an \\nexperiment; (2) an study being the same as another study at a different archive \\n(e.g. in BioStudies); (3) an individual being the parent of another individual; \\n(4) hundreds of samples being grouped with each other for broad reasons.",
                        "required": [
                            "rType"
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "rType": {
                                "type": "string",
                                "title": "Relationship type",
                                "description": "ID (e.g. sameAs) of the type of the relationship. To be chosen from a controlled \\nvocabulary (CV) list. If you cannot find your term in the CV list, please create \\nan issue at our [metadata GitHub \\nrepository](https://github.com/EbiEga/ega-metadata-schema) proposing its \\naddition.",
                                "enum": [
                                    "referencedBy",
                                    "developsFrom",
                                    "sameAs",
                                    "memberOf",
                                    "groupedWith",
                                    "familyRelationshipWith",
                                    "childOf",
                                    "isAfter",
                                    "publishedIn",
                                    "submittedBy",
                                    "contactOf",
                                    "mainContactOf"
                                ],
                                "meta:enum": {
                                    "referencedBy": "[SIO:000252]",
                                    "developsFrom": "[RO:0002202]",
                                    "sameAs": "[NCIT:C64637]",
                                    "memberOf": "[RO:0002350]",
                                    "groupedWith": "",
                                    "familyRelationshipWith": "[EFO:0004424]",
                                    "childOf": "[GSSO:000728]",
                                    "isAfter": "[SIO:000211]",
                                    "publishedIn": "[EFO:0001796]",
                                    "submittedBy": "[NCIT:C25695]",
                                    "contactOf": "[NCIT:C25461]",
                                    "mainContactOf": ""
                                },
                                "examples": [
                                    "referencedBy"
                                ]
                            },
                            "rSource": {
                                "type": "object",
                                "title": "Source of the relationship",
                                "description": "Object reference of the relationship's source. In other words, the starting \\npoint of the relationship: in 'sample_A developsFrom sample_B' the source is \\n'sample_A'.",
                                "allOf": [
                                    {
                                        "type": "object",
                                        "title": "Relationship's object (either source or target)",
                                        "description": "Node containing metadata (identifiers and the type of reference) of one of the \\nends of the relationship, whether it is the source or the target of the \\nrelationship.",
                                        "additionalProperties": false,
                                        "required": [
                                            "objectId",
                                            "objectType"
                                        ],
                                        "properties": {
                                            "objectId": {
                                                "type": "object",
                                                "title": "Relationship's object's IDs block",
                                                "description": "Node containing the main identifiers of the relationship's object (e.g. alias, \\ncenterName...), inherited from the common definitions \\n(#/definitions/objectCoreId).",
                                                "allOf": [
                                                    {
                                                        "type": "object",
                                                        "title": "Core identifiers of an object",
                                                        "description": "Base definition containing the properties (e.g. Sample's alias) of a minimal \\nidentification layer of an EGA object (e.g. Sample).",
                                                        "additionalProperties": false,
                                                        "properties": {
                                                            "alias": {
                                                                "type": "string",
                                                                "title": "Alias of an object",
                                                                "description": "Submitter designated name (e.g. 'my_sample_J13') for the object (e.g. Sample). \\nThe name must be unique within the submission account (e.g. 'ega-box-79'), since \\nthe aliases and submission accounts are concatenated within our database to \\nobtain the unique alias (e.g. 'ega-box-79::my_sample_J13').",
                                                                "minLength": 1,
                                                                "examples": [
                                                                    "my_sample_J13"
                                                                ]
                                                            },
                                                            "centerName": {
                                                                "type": "string",
                                                                "title": "Center name of the submitter",
                                                                "description": "Center name (e.g. 'EBI-TEST') associated to the submitter. In other words, it is \\nthe acronym of the submitter's account (provided by the HelpDesk team).",
                                                                "minLength": 1,
                                                                "examples": [
                                                                    "EBI-TEST"
                                                                ]
                                                            },
                                                            "egaAccession": {
                                                                "type": "string",
                                                                "title": "EGA's accession of the object",
                                                                "description": "The object accession (i.e. unique identifier) assigned by the archive (EGA). \\nObject accessions can be found in the 'Identifiers' section of the EGA-archive \\nwebsite (https://ega-archive.org/metadata/how-to-use-the-api) and commonly start \\nwith EGA, followed by the distinctive letter of the object and finally the \\nnumeric ID of the instance.",
                                                                "examples": [
                                                                    "EGAN00003245489"
                                                                ]
                                                            },
                                                            "externalAccessions": {
                                                                "type": "array",
                                                                "title": "External accessions array",
                                                                "description": "External accession node to reference objects in other archives (e.g. an already \\nexisting sample at BioSamples).",
                                                                "minItems": 1,
                                                                "additionalProperties": false,
                                                                "uniqueItems": true,
                                                                "items": {
                                                                    "type": "object",
                                                                    "title": "Object External accession",
                                                                    "description": "External accession property defining a reference to an external record in \\nanother resource. For example, a reference to a sequence deposited in NCBI's \\nNucleotide database (e.g. 'https://identifiers.org/nucleotide:T35715.1'); or a \\nsample record in BioSamples (e.g. \\n'https://identifiers.org/biosample:SAMEA7616999').",
                                                                    "additionalProperties": false,
                                                                    "properties": {
                                                                        "objectExternalAccessionIdentifier": {
                                                                            "type": "object",
                                                                            "title": "Identifier of the external accession",
                                                                            "description": "Unique identifier of an external record. Its 'termId' (e.g. \\n'biosample:SAMEA7616999', 'pubmed:30962759', 'biostudies:S-EPMC3314381', etc.) \\nshall follow CURIE format of ``prefix``:``accession``, where: (1) the prefix \\n(e.g. 'biosample') is unique and assigned to the external resource at \\nidentifiers.org; (2) and the unique accession of the object (e.g. SAMEA7616999) \\nshould resolve to an existing record within the resource. If in doubt, use \\nidentifiers.org to resolve your external accession: 'https://identifiers.org/' + \\n'termId', e.g. 'https://identifiers.org/biosample:SAMEA7616999'",
                                                                            "allOf": [
                                                                                {
                                                                                    "type": "object",
                                                                                    "title": "Ontology term",
                                                                                    "description": "This property represents an ontology term (a.k.a. class). It consists on two \\nproperties: the term identifier (termId) and its label (termLabel). This \\nproperty and its structure is inherited across many other elements in the \\nschemas. It is there, when inherited, where the real ontology constraint is put \\nin place (e.g. using 'graphRestriction' keywords). Based on phenopacket's [OntologyClass](https://phenopacket-schema.readthedocs.io/en/latest/ontologyclass.html)",
                                                                                    "additionalProperties": false,
                                                                                    "required": [
                                                                                        "termId",
                                                                                        "termLabel"
                                                                                    ],
                                                                                    "properties": {
                                                                                        "termId": {
                                                                                            "type": "string",
                                                                                            "title": "ID of the term",
                                                                                            "description": "The identifier of an ontology term must be in CURIE format (check property \\n'curieGeneralPattern'). Whether a specific term is valid or not according to an \\nontology hierarchy is checked at each specific termId using ontology validation \\nkeywords (e.g. 'graphRestriction').",
                                                                                            "minLength": 1,
                                                                                            "allOf": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "title": "Compact URI (CURIE) pattern",
                                                                                                    "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE \\nstring has the structure ``prefix``:``reference``, as defined by the W3C syntax. \\nEven though we do not restrict prefixes, we recommend that the term used as \\n``prefix`` is uniformely resolved. In other words, it is better to use prefixes \\n(e.g. 'ensembl') from identifiers.org.",
                                                                                                    "minLength": 1,
                                                                                                    "pattern": "^\\w[^:]*:.+$",
                                                                                                    "examples": [
                                                                                                        "ensembl:ENSG00000139618",
                                                                                                        "HGNC:11535",
                                                                                                        "data:1026",
                                                                                                        "EFO:0003815"
                                                                                                    ]
                                                                                                }
                                                                                            ],
                                                                                            "examples": [
                                                                                                "MONDO:0100096",
                                                                                                "EFO:0003101",
                                                                                                "EFO:0005518",
                                                                                                "EFO:0002944",
                                                                                                "EFO:0003813"
                                                                                            ]
                                                                                        },
                                                                                        "termLabel": {
                                                                                            "type": "string",
                                                                                            "title": "Label of the term",
                                                                                            "description": "The label of a term is the human-readable string associated with the identifier. \\nIt is not required that it matches the label of the termId within the referenced \\nontology, although it should. This is due to the fact that the source of truth \\nwill always be the termId, and not the label, which adds more context.",
                                                                                            "minLength": 1,
                                                                                            "examples": [
                                                                                                "COVID-19",
                                                                                                "Axila skin",
                                                                                                "bone marrow cell",
                                                                                                "astrocyte",
                                                                                                "oligodendrocyte",
                                                                                                "Unknown",
                                                                                                "Unaffected",
                                                                                                "homo sapiens"
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                }
                                                                            ]
                                                                        },
                                                                        "objectExternalAccessionURI": {
                                                                            "type": "string",
                                                                            "title": "URI of the external accession",
                                                                            "description": "Full or partial URL/URI of the external accession, for systems to resolve it. \\nShould only be used in case identifiers.org does not contain a namespace for the \\nrequired resource or the mapping to the URI from its identifier is faulty.",
                                                                            "allOf": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "title": "URL/URI pattern",
                                                                                    "description": "This object exists to hold the pattern that a URL or URI should have. For it to \\nbe referenced elsewhere within this (or other) JSON schema.",
                                                                                    "pattern": "^((http|https)://)(www.)?[a-zA-Z0-9@:%._\\+~#?&//=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%._\\+~#?&//=]*)$",
                                                                                    "examples": [
                                                                                        "https://phenopacket-schema.readthedocs.io/en/latest/externalreference.html",
                                                                                        "https://www.ebi.ac.uk/arrayexpress/experiments/E-MEXP-1712/",
                                                                                        "https://www.geeksforgeeks.org/check-if-an-url-is-valid-or-not-using-regular-expression/"
                                                                                    ]
                                                                                }
                                                                            ],
                                                                            "examples": [
                                                                                "https://www.ebi.ac.uk/biosamples/samples/SAMN11716999",
                                                                                "https://pubmed.ncbi.nlm.nih.gov/19491253",
                                                                                "https://www.ebi.ac.uk/arrayexpress/experiments/E-MEXP-1712/"
                                                                            ]
                                                                        },
                                                                        "objectExternalAccessionDescription": {
                                                                            "type": [
                                                                                "string",
                                                                                "number"
                                                                            ],
                                                                            "title": "Description of the external accession",
                                                                            "description": "Optional description of the external accession, used to add context to the \\nidentifier if applicable.",
                                                                            "examples": [
                                                                                "taken from biosample temporarily",
                                                                                "Ensembl's part of the accessions",
                                                                                "first",
                                                                                2,
                                                                                "Recurrent Erythema Nodosum in a Child with a SHOC2 Gene Mutation"
                                                                            ]
                                                                        }
                                                                    },
                                                                    "anyOf": [
                                                                        {
                                                                            "title": "Either the identifier is needed",
                                                                            "required": [
                                                                                "objectExternalAccessionIdentifier"
                                                                            ]
                                                                        },
                                                                        {
                                                                            "title": "Or the reference is needed",
                                                                            "required": [
                                                                                "objectExternalAccessionURI"
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        },
                                                        "anyOf": [
                                                            {
                                                                "title": "Check core IDs: combination of Alias and Center name",
                                                                "required": [
                                                                    "alias",
                                                                    "centerName"
                                                                ]
                                                            },
                                                            {
                                                                "title": "Check core IDs: EGA accession ID",
                                                                "required": [
                                                                    "egaAccession"
                                                                ]
                                                            },
                                                            {
                                                                "title": "Check core IDs: external accessions",
                                                                "required": [
                                                                    "externalAccessions"
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "objectType": {
                                                "type": "string",
                                                "title": "Type of the relationship's object",
                                                "description": "Type of the relationship's object, chosen from a list of CV (e.g. experiment, \\ndataset, externalURL...). Both the source or target types can be: (1) the object \\ntag of one of EGA's object (e.g. file, sample...); (2) an 'externalAccession'; \\n(3) or an 'externalURL'. Term chosen from a list of controlled vocabulary (CV). \\nIf you cannot find your term in the CV list, please create an issue at our \\n[metadata GitHub repository](https://github.com/EbiEga/ega-metadata-schema) \\nproposing its addition.",
                                                "enum": [
                                                    "experiment",
                                                    "study",
                                                    "sample",
                                                    "individual",
                                                    "submission",
                                                    "assay",
                                                    "dataset",
                                                    "analysis",
                                                    "policy",
                                                    "DAC",
                                                    "protocol",
                                                    "externalAccession",
                                                    "externalURL"
                                                ],
                                                "meta:enum": {
                                                    "experiment": "Contains information about the experimental design of the sequencing",
                                                    "study": "Information about the study",
                                                    "sample": "Information about the used samples",
                                                    "individual": "Information about the participants (i.e. humans) of the study",
                                                    "submission": "Information about the submission actions",
                                                    "assay": "Contains information about the specific assays (either sequencing or array \\nassays) from the experiment",
                                                    "dataset": "Contains the collection of assay/analysis data files to be subject to controlled \\naccess",
                                                    "analysis": "Contains the analysis metadata and data files",
                                                    "policy": "Contains information related to the Data Access Agreement (DAA) the dataset is \\nsubject to",
                                                    "DAC": "Contains information about the Data Access Committee (DAC)",
                                                    "protocol": "Contains information about a planned process.",
                                                    "externalAccession": "An external accession among the ones Entrez (NCBI's text search) contemplates \\n(search for the terms here: \\nhttps://www.ncbi.nlm.nih.gov/entrez/eutils/einfo.fcgi?)",
                                                    "externalURL": "An external URL resource, of any type"
                                                },
                                                "examples": [
                                                    "sample"
                                                ]
                                            }
                                        },
                                        "allOf": [
                                            {
                                                "type": "object",
                                                "title": "Check that the objectId's accession pattern and objectType match",
                                                "description": "This object exists with the only purpose of being a reference as a pattern check \\nof a given objectId and objectType. The constraint consists in asserting that, \\nif the object identifier is an EGA accession, its pattern matches the object \\ntype (e.g. if objectType is 'sample', its EGA accession needs to match \\n'^EGAN[0-9]{11}$')",
                                                "anyOf": [
                                                    {
                                                        "title": "Alias and Centername: objectId and objectType check",
                                                        "description": "A check that ensures that the alias and centername are given as the objectType. \\nSince the alias and centername cannot be checked for specific objectTypes (i.e. \\neach can name their objects in different ways), this block exists here just so \\nthat this option is allowed.",
                                                        "properties": {
                                                            "objectId": {
                                                                "required": [
                                                                    "alias",
                                                                    "centerName"
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "title": "External accession: objectId and objectType check",
                                                        "description": "A check that ensures that, if 'externalAccession' is given as the objectType, \\nthe corresponding node exists within objectId",
                                                        "properties": {
                                                            "objectId": {
                                                                "required": [
                                                                    "externalAccessions"
                                                                ]
                                                            },
                                                            "objectType": {
                                                                "enum": [
                                                                    "externalAccession"
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "title": "Experiment: objectId and objectType check",
                                                        "description": "A check that ensures that, if 'experiment' is given as the objectType and an EGA \\naccession for it is given, it matches the corresponding EGA ID pattern.",
                                                        "properties": {
                                                            "objectId": {
                                                                "properties": {
                                                                    "egaAccession": {
                                                                        "type": "string",
                                                                        "title": "Pattern of an EGA experiment's ID (EGAX...)",
                                                                        "pattern": "^EGAX[0-9]{11}$",
                                                                        "examples": [
                                                                            "EGAX00002189113"
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            "objectType": {
                                                                "enum": [
                                                                    "experiment"
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "title": "Study: objectId and objectType check",
                                                        "description": "A check that ensures that, if 'study' is given as the objectType and an EGA \\naccession for it is given, it matches the corresponding EGA ID pattern.",
                                                        "properties": {
                                                            "objectId": {
                                                                "properties": {
                                                                    "egaAccession": {
                                                                        "type": "string",
                                                                        "title": "Pattern of an EGA study's ID (EGAS...)",
                                                                        "pattern": "^EGAS[0-9]{11}$",
                                                                        "examples": [
                                                                            "EGAS00001004508"
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            "objectType": {
                                                                "enum": [
                                                                    "study"
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "title": "Sample: objectId and objectType check",
                                                        "description": "A check that ensures that, if 'sample' is given as the objectType and an EGA \\naccession for it is given, it matches the corresponding EGA ID pattern.",
                                                        "properties": {
                                                            "objectId": {
                                                                "properties": {
                                                                    "egaAccession": {
                                                                        "type": "string",
                                                                        "title": "Pattern of an EGA sample's ID (EGAN...)",
                                                                        "pattern": "^EGAN[0-9]{11}$",
                                                                        "examples": [
                                                                            "EGAN00003245489"
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            "objectType": {
                                                                "enum": [
                                                                    "sample"
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "title": "Submission: objectId and objectType check",
                                                        "description": "A check that ensures that, if 'submission' is given as the objectType and an EGA \\naccession for it is given, it matches the corresponding EGA ID pattern.",
                                                        "properties": {
                                                            "objectId": {
                                                                "properties": {
                                                                    "egaAccession": {
                                                                        "type": "string",
                                                                        "title": "Pattern of an EGA submission's ID (EGAB...)",
                                                                        "pattern": "^EGAB[0-9]{11}$",
                                                                        "examples": [
                                                                            "EGAB00001001831"
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            "objectType": {
                                                                "enum": [
                                                                    "submission"
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "title": "Assay: objectId and objectType check",
                                                        "description": "A check that ensures that, if 'assay' is given as the objectType and an EGA \\naccession for it is given, it matches the corresponding EGA ID pattern.",
                                                        "properties": {
                                                            "objectId": {
                                                                "properties": {
                                                                    "egaAccession": {
                                                                        "type": "string",
                                                                        "title": "Pattern of an EGA assay's ID (EGAR...)",
                                                                        "pattern": "^EGAR[0-9]{11}$",
                                                                        "examples": [
                                                                            "EGAR00001314547"
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            "objectType": {
                                                                "enum": [
                                                                    "assay"
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "title": "Dataset: objectId and objectType check",
                                                        "description": "A check that ensures that, if 'dataset' is given as the objectType and an EGA \\naccession for it is given, it matches the corresponding EGA ID pattern.",
                                                        "properties": {
                                                            "objectId": {
                                                                "properties": {
                                                                    "egaAccession": {
                                                                        "type": "string",
                                                                        "title": "Pattern of an EGA dataset's ID (EGAD...)",
                                                                        "pattern": "^EGAD[0-9]{11}$",
                                                                        "examples": [
                                                                            "EGAD00001004170"
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            "objectType": {
                                                                "enum": [
                                                                    "dataset"
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "title": "Analysis: objectId and objectType check",
                                                        "description": "A check that ensures that, if 'analysis' is given as the objectType and an EGA \\naccession for it is given, it matches the corresponding EGA ID pattern.",
                                                        "properties": {
                                                            "objectId": {
                                                                "properties": {
                                                                    "egaAccession": {
                                                                        "type": "string",
                                                                        "title": "Pattern of an EGA analysis's ID (EGAZ...)",
                                                                        "pattern": "^EGAZ[0-9]{11}$",
                                                                        "examples": [
                                                                            "EGAZ00001004170"
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            "objectType": {
                                                                "enum": [
                                                                    "analysis"
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "title": "Policy: objectId and objectType check",
                                                        "description": "A check that ensures that, if 'policy' is given as the objectType and an EGA \\naccession for it is given, it matches the corresponding EGA ID pattern.",
                                                        "properties": {
                                                            "objectId": {
                                                                "properties": {
                                                                    "egaAccession": {
                                                                        "type": "string",
                                                                        "title": "Pattern of an EGA policy's ID (EGAP...)",
                                                                        "pattern": "^EGAP[0-9]{11}$",
                                                                        "examples": [
                                                                            "EGAP00001001831"
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            "objectType": {
                                                                "enum": [
                                                                    "policy"
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "title": "DAC: objectId and objectType check",
                                                        "description": "A check that ensures that, if 'DAC' is given as the objectType and an EGA \\naccession for it is given, it matches the corresponding EGA ID pattern.",
                                                        "properties": {
                                                            "objectId": {
                                                                "properties": {
                                                                    "egaAccession": {
                                                                        "type": "string",
                                                                        "title": "Pattern of an EGA DAC's ID (EGAC...)",
                                                                        "pattern": "^EGAC[0-9]{11}$",
                                                                        "examples": [
                                                                            "EGAC00001000908"
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            "objectType": {
                                                                "enum": [
                                                                    "DAC"
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "title": "Individual: objectId and objectType check",
                                                        "description": "A check that ensures that, if 'individual' is given as the objectType and an EGA \\naccession for it is given, it matches the corresponding EGA ID pattern.",
                                                        "properties": {
                                                            "objectId": {
                                                                "properties": {
                                                                    "egaAccession": {
                                                                        "type": "string",
                                                                        "title": "Pattern of an EGA Individual's ID (EGAI...)",
                                                                        "pattern": "^EGAI[0-9]{11}$",
                                                                        "examples": [
                                                                            "EGAI00001159712"
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            "objectType": {
                                                                "enum": [
                                                                    "individual"
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "title": "Protocol: objectId and objectType check",
                                                        "description": "A check that ensures that, if 'protocol' is given as the objectType and an EGA \\naccession for it is given, it matches the corresponding EGA ID pattern.",
                                                        "properties": {
                                                            "objectId": {
                                                                "properties": {
                                                                    "egaAccession": {
                                                                        "type": "string",
                                                                        "title": "Pattern of an EGA protocol's ID (EGAO...)",
                                                                        "pattern": "^EGAO[0-9]{11}$",
                                                                        "examples": [
                                                                            "EGAO00001159483"
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            "objectType": {
                                                                "enum": [
                                                                    "protocol"
                                                                ]
                                                            }
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            "rTarget": {
                                "type": "object",
                                "title": "Target of the relationship",
                                "description": "Object reference of the relationship's target. In other words, the ending point \\nof the relationship: in 'sample_A developsFrom sample_B' the target is \\n'sample_B'.",
                                "allOf": [
                                    {
                                        "type": "object",
                                        "title": "Relationship's object (either source or target)",
                                        "description": "Node containing metadata (identifiers and the type of reference) of one of the \\nends of the relationship, whether it is the source or the target of the \\nrelationship.",
                                        "additionalProperties": false,
                                        "required": [
                                            "objectId",
                                            "objectType"
                                        ],
                                        "properties": {
                                            "objectId": {
                                                "type": "object",
                                                "title": "Relationship's object's IDs block",
                                                "description": "Node containing the main identifiers of the relationship's object (e.g. alias, \\ncenterName...), inherited from the common definitions \\n(#/definitions/objectCoreId).",
                                                "allOf": [
                                                    {
                                                        "type": "object",
                                                        "title": "Core identifiers of an object",
                                                        "description": "Base definition containing the properties (e.g. Sample's alias) of a minimal \\nidentification layer of an EGA object (e.g. Sample).",
                                                        "additionalProperties": false,
                                                        "properties": {
                                                            "alias": {
                                                                "type": "string",
                                                                "title": "Alias of an object",
                                                                "description": "Submitter designated name (e.g. 'my_sample_J13') for the object (e.g. Sample). \\nThe name must be unique within the submission account (e.g. 'ega-box-79'), since \\nthe aliases and submission accounts are concatenated within our database to \\nobtain the unique alias (e.g. 'ega-box-79::my_sample_J13').",
                                                                "minLength": 1,
                                                                "examples": [
                                                                    "my_sample_J13"
                                                                ]
                                                            },
                                                            "centerName": {
                                                                "type": "string",
                                                                "title": "Center name of the submitter",
                                                                "description": "Center name (e.g. 'EBI-TEST') associated to the submitter. In other words, it is \\nthe acronym of the submitter's account (provided by the HelpDesk team).",
                                                                "minLength": 1,
                                                                "examples": [
                                                                    "EBI-TEST"
                                                                ]
                                                            },
                                                            "egaAccession": {
                                                                "type": "string",
                                                                "title": "EGA's accession of the object",
                                                                "description": "The object accession (i.e. unique identifier) assigned by the archive (EGA). \\nObject accessions can be found in the 'Identifiers' section of the EGA-archive \\nwebsite (https://ega-archive.org/metadata/how-to-use-the-api) and commonly start \\nwith EGA, followed by the distinctive letter of the object and finally the \\nnumeric ID of the instance.",
                                                                "examples": [
                                                                    "EGAN00003245489"
                                                                ]
                                                            },
                                                            "externalAccessions": {
                                                                "type": "array",
                                                                "title": "External accessions array",
                                                                "description": "External accession node to reference objects in other archives (e.g. an already \\nexisting sample at BioSamples).",
                                                                "minItems": 1,
                                                                "additionalProperties": false,
                                                                "uniqueItems": true,
                                                                "items": {
                                                                    "type": "object",
                                                                    "title": "Object External accession",
                                                                    "description": "External accession property defining a reference to an external record in \\nanother resource. For example, a reference to a sequence deposited in NCBI's \\nNucleotide database (e.g. 'https://identifiers.org/nucleotide:T35715.1'); or a \\nsample record in BioSamples (e.g. \\n'https://identifiers.org/biosample:SAMEA7616999').",
                                                                    "additionalProperties": false,
                                                                    "properties": {
                                                                        "objectExternalAccessionIdentifier": {
                                                                            "type": "object",
                                                                            "title": "Identifier of the external accession",
                                                                            "description": "Unique identifier of an external record. Its 'termId' (e.g. \\n'biosample:SAMEA7616999', 'pubmed:30962759', 'biostudies:S-EPMC3314381', etc.) \\nshall follow CURIE format of ``prefix``:``accession``, where: (1) the prefix \\n(e.g. 'biosample') is unique and assigned to the external resource at \\nidentifiers.org; (2) and the unique accession of the object (e.g. SAMEA7616999) \\nshould resolve to an existing record within the resource. If in doubt, use \\nidentifiers.org to resolve your external accession: 'https://identifiers.org/' + \\n'termId', e.g. 'https://identifiers.org/biosample:SAMEA7616999'",
                                                                            "allOf": [
                                                                                {
                                                                                    "type": "object",
                                                                                    "title": "Ontology term",
                                                                                    "description": "This property represents an ontology term (a.k.a. class). It consists on two \\nproperties: the term identifier (termId) and its label (termLabel). This \\nproperty and its structure is inherited across many other elements in the \\nschemas. It is there, when inherited, where the real ontology constraint is put \\nin place (e.g. using 'graphRestriction' keywords). Based on phenopacket's [OntologyClass](https://phenopacket-schema.readthedocs.io/en/latest/ontologyclass.html)",
                                                                                    "additionalProperties": false,
                                                                                    "required": [
                                                                                        "termId",
                                                                                        "termLabel"
                                                                                    ],
                                                                                    "properties": {
                                                                                        "termId": {
                                                                                            "type": "string",
                                                                                            "title": "ID of the term",
                                                                                            "description": "The identifier of an ontology term must be in CURIE format (check property \\n'curieGeneralPattern'). Whether a specific term is valid or not according to an \\nontology hierarchy is checked at each specific termId using ontology validation \\nkeywords (e.g. 'graphRestriction').",
                                                                                            "minLength": 1,
                                                                                            "allOf": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "title": "Compact URI (CURIE) pattern",
                                                                                                    "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE \\nstring has the structure ``prefix``:``reference``, as defined by the W3C syntax. \\nEven though we do not restrict prefixes, we recommend that the term used as \\n``prefix`` is uniformely resolved. In other words, it is better to use prefixes \\n(e.g. 'ensembl') from identifiers.org.",
                                                                                                    "minLength": 1,
                                                                                                    "pattern": "^\\w[^:]*:.+$",
                                                                                                    "examples": [
                                                                                                        "ensembl:ENSG00000139618",
                                                                                                        "HGNC:11535",
                                                                                                        "data:1026",
                                                                                                        "EFO:0003815"
                                                                                                    ]
                                                                                                }
                                                                                            ],
                                                                                            "examples": [
                                                                                                "MONDO:0100096",
                                                                                                "EFO:0003101",
                                                                                                "EFO:0005518",
                                                                                                "EFO:0002944",
                                                                                                "EFO:0003813"
                                                                                            ]
                                                                                        },
                                                                                        "termLabel": {
                                                                                            "type": "string",
                                                                                            "title": "Label of the term",
                                                                                            "description": "The label of a term is the human-readable string associated with the identifier. \\nIt is not required that it matches the label of the termId within the referenced \\nontology, although it should. This is due to the fact that the source of truth \\nwill always be the termId, and not the label, which adds more context.",
                                                                                            "minLength": 1,
                                                                                            "examples": [
                                                                                                "COVID-19",
                                                                                                "Axila skin",
                                                                                                "bone marrow cell",
                                                                                                "astrocyte",
                                                                                                "oligodendrocyte",
                                                                                                "Unknown",
                                                                                                "Unaffected",
                                                                                                "homo sapiens"
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                }
                                                                            ]
                                                                        },
                                                                        "objectExternalAccessionURI": {
                                                                            "type": "string",
                                                                            "title": "URI of the external accession",
                                                                            "description": "Full or partial URL/URI of the external accession, for systems to resolve it. \\nShould only be used in case identifiers.org does not contain a namespace for the \\nrequired resource or the mapping to the URI from its identifier is faulty.",
                                                                            "allOf": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "title": "URL/URI pattern",
                                                                                    "description": "This object exists to hold the pattern that a URL or URI should have. For it to \\nbe referenced elsewhere within this (or other) JSON schema.",
                                                                                    "pattern": "^((http|https)://)(www.)?[a-zA-Z0-9@:%._\\+~#?&//=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%._\\+~#?&//=]*)$",
                                                                                    "examples": [
                                                                                        "https://phenopacket-schema.readthedocs.io/en/latest/externalreference.html",
                                                                                        "https://www.ebi.ac.uk/arrayexpress/experiments/E-MEXP-1712/",
                                                                                        "https://www.geeksforgeeks.org/check-if-an-url-is-valid-or-not-using-regular-expression/"
                                                                                    ]
                                                                                }
                                                                            ],
                                                                            "examples": [
                                                                                "https://www.ebi.ac.uk/biosamples/samples/SAMN11716999",
                                                                                "https://pubmed.ncbi.nlm.nih.gov/19491253",
                                                                                "https://www.ebi.ac.uk/arrayexpress/experiments/E-MEXP-1712/"
                                                                            ]
                                                                        },
                                                                        "objectExternalAccessionDescription": {
                                                                            "type": [
                                                                                "string",
                                                                                "number"
                                                                            ],
                                                                            "title": "Description of the external accession",
                                                                            "description": "Optional description of the external accession, used to add context to the \\nidentifier if applicable.",
                                                                            "examples": [
                                                                                "taken from biosample temporarily",
                                                                                "Ensembl's part of the accessions",
                                                                                "first",
                                                                                2,
                                                                                "Recurrent Erythema Nodosum in a Child with a SHOC2 Gene Mutation"
                                                                            ]
                                                                        }
                                                                    },
                                                                    "anyOf": [
                                                                        {
                                                                            "title": "Either the identifier is needed",
                                                                            "required": [
                                                                                "objectExternalAccessionIdentifier"
                                                                            ]
                                                                        },
                                                                        {
                                                                            "title": "Or the reference is needed",
                                                                            "required": [
                                                                                "objectExternalAccessionURI"
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        },
                                                        "anyOf": [
                                                            {
                                                                "title": "Check core IDs: combination of Alias and Center name",
                                                                "required": [
                                                                    "alias",
                                                                    "centerName"
                                                                ]
                                                            },
                                                            {
                                                                "title": "Check core IDs: EGA accession ID",
                                                                "required": [
                                                                    "egaAccession"
                                                                ]
                                                            },
                                                            {
                                                                "title": "Check core IDs: external accessions",
                                                                "required": [
                                                                    "externalAccessions"
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "objectType": {
                                                "type": "string",
                                                "title": "Type of the relationship's object",
                                                "description": "Type of the relationship's object, chosen from a list of CV (e.g. experiment, \\ndataset, externalURL...). Both the source or target types can be: (1) the object \\ntag of one of EGA's object (e.g. file, sample...); (2) an 'externalAccession'; \\n(3) or an 'externalURL'. Term chosen from a list of controlled vocabulary (CV). \\nIf you cannot find your term in the CV list, please create an issue at our \\n[metadata GitHub repository](https://github.com/EbiEga/ega-metadata-schema) \\nproposing its addition.",
                                                "enum": [
                                                    "experiment",
                                                    "study",
                                                    "sample",
                                                    "individual",
                                                    "submission",
                                                    "assay",
                                                    "dataset",
                                                    "analysis",
                                                    "policy",
                                                    "DAC",
                                                    "protocol",
                                                    "externalAccession",
                                                    "externalURL"
                                                ],
                                                "meta:enum": {
                                                    "experiment": "Contains information about the experimental design of the sequencing",
                                                    "study": "Information about the study",
                                                    "sample": "Information about the used samples",
                                                    "individual": "Information about the participants (i.e. humans) of the study",
                                                    "submission": "Information about the submission actions",
                                                    "assay": "Contains information about the specific assays (either sequencing or array \\nassays) from the experiment",
                                                    "dataset": "Contains the collection of assay/analysis data files to be subject to controlled \\naccess",
                                                    "analysis": "Contains the analysis metadata and data files",
                                                    "policy": "Contains information related to the Data Access Agreement (DAA) the dataset is \\nsubject to",
                                                    "DAC": "Contains information about the Data Access Committee (DAC)",
                                                    "protocol": "Contains information about a planned process.",
                                                    "externalAccession": "An external accession among the ones Entrez (NCBI's text search) contemplates \\n(search for the terms here: \\nhttps://www.ncbi.nlm.nih.gov/entrez/eutils/einfo.fcgi?)",
                                                    "externalURL": "An external URL resource, of any type"
                                                },
                                                "examples": [
                                                    "sample"
                                                ]
                                            }
                                        },
                                        "allOf": [
                                            {
                                                "type": "object",
                                                "title": "Check that the objectId's accession pattern and objectType match",
                                                "description": "This object exists with the only purpose of being a reference as a pattern check \\nof a given objectId and objectType. The constraint consists in asserting that, \\nif the object identifier is an EGA accession, its pattern matches the object \\ntype (e.g. if objectType is 'sample', its EGA accession needs to match \\n'^EGAN[0-9]{11}$')",
                                                "anyOf": [
                                                    {
                                                        "title": "Alias and Centername: objectId and objectType check",
                                                        "description": "A check that ensures that the alias and centername are given as the objectType. \\nSince the alias and centername cannot be checked for specific objectTypes (i.e. \\neach can name their objects in different ways), this block exists here just so \\nthat this option is allowed.",
                                                        "properties": {
                                                            "objectId": {
                                                                "required": [
                                                                    "alias",
                                                                    "centerName"
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "title": "External accession: objectId and objectType check",
                                                        "description": "A check that ensures that, if 'externalAccession' is given as the objectType, \\nthe corresponding node exists within objectId",
                                                        "properties": {
                                                            "objectId": {
                                                                "required": [
                                                                    "externalAccessions"
                                                                ]
                                                            },
                                                            "objectType": {
                                                                "enum": [
                                                                    "externalAccession"
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "title": "Experiment: objectId and objectType check",
                                                        "description": "A check that ensures that, if 'experiment' is given as the objectType and an EGA \\naccession for it is given, it matches the corresponding EGA ID pattern.",
                                                        "properties": {
                                                            "objectId": {
                                                                "properties": {
                                                                    "egaAccession": {
                                                                        "type": "string",
                                                                        "title": "Pattern of an EGA experiment's ID (EGAX...)",
                                                                        "pattern": "^EGAX[0-9]{11}$",
                                                                        "examples": [
                                                                            "EGAX00002189113"
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            "objectType": {
                                                                "enum": [
                                                                    "experiment"
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "title": "Study: objectId and objectType check",
                                                        "description": "A check that ensures that, if 'study' is given as the objectType and an EGA \\naccession for it is given, it matches the corresponding EGA ID pattern.",
                                                        "properties": {
                                                            "objectId": {
                                                                "properties": {
                                                                    "egaAccession": {
                                                                        "type": "string",
                                                                        "title": "Pattern of an EGA study's ID (EGAS...)",
                                                                        "pattern": "^EGAS[0-9]{11}$",
                                                                        "examples": [
                                                                            "EGAS00001004508"
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            "objectType": {
                                                                "enum": [
                                                                    "study"
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "title": "Sample: objectId and objectType check",
                                                        "description": "A check that ensures that, if 'sample' is given as the objectType and an EGA \\naccession for it is given, it matches the corresponding EGA ID pattern.",
                                                        "properties": {
                                                            "objectId": {
                                                                "properties": {
                                                                    "egaAccession": {
                                                                        "type": "string",
                                                                        "title": "Pattern of an EGA sample's ID (EGAN...)",
                                                                        "pattern": "^EGAN[0-9]{11}$",
                                                                        "examples": [
                                                                            "EGAN00003245489"
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            "objectType": {
                                                                "enum": [
                                                                    "sample"
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "title": "Submission: objectId and objectType check",
                                                        "description": "A check that ensures that, if 'submission' is given as the objectType and an EGA \\naccession for it is given, it matches the corresponding EGA ID pattern.",
                                                        "properties": {
                                                            "objectId": {
                                                                "properties": {
                                                                    "egaAccession": {
                                                                        "type": "string",
                                                                        "title": "Pattern of an EGA submission's ID (EGAB...)",
                                                                        "pattern": "^EGAB[0-9]{11}$",
                                                                        "examples": [
                                                                            "EGAB00001001831"
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            "objectType": {
                                                                "enum": [
                                                                    "submission"
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "title": "Assay: objectId and objectType check",
                                                        "description": "A check that ensures that, if 'assay' is given as the objectType and an EGA \\naccession for it is given, it matches the corresponding EGA ID pattern.",
                                                        "properties": {
                                                            "objectId": {
                                                                "properties": {
                                                                    "egaAccession": {
                                                                        "type": "string",
                                                                        "title": "Pattern of an EGA assay's ID (EGAR...)",
                                                                        "pattern": "^EGAR[0-9]{11}$",
                                                                        "examples": [
                                                                            "EGAR00001314547"
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            "objectType": {
                                                                "enum": [
                                                                    "assay"
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "title": "Dataset: objectId and objectType check",
                                                        "description": "A check that ensures that, if 'dataset' is given as the objectType and an EGA \\naccession for it is given, it matches the corresponding EGA ID pattern.",
                                                        "properties": {
                                                            "objectId": {
                                                                "properties": {
                                                                    "egaAccession": {
                                                                        "type": "string",
                                                                        "title": "Pattern of an EGA dataset's ID (EGAD...)",
                                                                        "pattern": "^EGAD[0-9]{11}$",
                                                                        "examples": [
                                                                            "EGAD00001004170"
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            "objectType": {
                                                                "enum": [
                                                                    "dataset"
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "title": "Analysis: objectId and objectType check",
                                                        "description": "A check that ensures that, if 'analysis' is given as the objectType and an EGA \\naccession for it is given, it matches the corresponding EGA ID pattern.",
                                                        "properties": {
                                                            "objectId": {
                                                                "properties": {
                                                                    "egaAccession": {
                                                                        "type": "string",
                                                                        "title": "Pattern of an EGA analysis's ID (EGAZ...)",
                                                                        "pattern": "^EGAZ[0-9]{11}$",
                                                                        "examples": [
                                                                            "EGAZ00001004170"
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            "objectType": {
                                                                "enum": [
                                                                    "analysis"
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "title": "Policy: objectId and objectType check",
                                                        "description": "A check that ensures that, if 'policy' is given as the objectType and an EGA \\naccession for it is given, it matches the corresponding EGA ID pattern.",
                                                        "properties": {
                                                            "objectId": {
                                                                "properties": {
                                                                    "egaAccession": {
                                                                        "type": "string",
                                                                        "title": "Pattern of an EGA policy's ID (EGAP...)",
                                                                        "pattern": "^EGAP[0-9]{11}$",
                                                                        "examples": [
                                                                            "EGAP00001001831"
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            "objectType": {
                                                                "enum": [
                                                                    "policy"
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "title": "DAC: objectId and objectType check",
                                                        "description": "A check that ensures that, if 'DAC' is given as the objectType and an EGA \\naccession for it is given, it matches the corresponding EGA ID pattern.",
                                                        "properties": {
                                                            "objectId": {
                                                                "properties": {
                                                                    "egaAccession": {
                                                                        "type": "string",
                                                                        "title": "Pattern of an EGA DAC's ID (EGAC...)",
                                                                        "pattern": "^EGAC[0-9]{11}$",
                                                                        "examples": [
                                                                            "EGAC00001000908"
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            "objectType": {
                                                                "enum": [
                                                                    "DAC"
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "title": "Individual: objectId and objectType check",
                                                        "description": "A check that ensures that, if 'individual' is given as the objectType and an EGA \\naccession for it is given, it matches the corresponding EGA ID pattern.",
                                                        "properties": {
                                                            "objectId": {
                                                                "properties": {
                                                                    "egaAccession": {
                                                                        "type": "string",
                                                                        "title": "Pattern of an EGA Individual's ID (EGAI...)",
                                                                        "pattern": "^EGAI[0-9]{11}$",
                                                                        "examples": [
                                                                            "EGAI00001159712"
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            "objectType": {
                                                                "enum": [
                                                                    "individual"
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "title": "Protocol: objectId and objectType check",
                                                        "description": "A check that ensures that, if 'protocol' is given as the objectType and an EGA \\naccession for it is given, it matches the corresponding EGA ID pattern.",
                                                        "properties": {
                                                            "objectId": {
                                                                "properties": {
                                                                    "egaAccession": {
                                                                        "type": "string",
                                                                        "title": "Pattern of an EGA protocol's ID (EGAO...)",
                                                                        "pattern": "^EGAO[0-9]{11}$",
                                                                        "examples": [
                                                                            "EGAO00001159483"
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            "objectType": {
                                                                "enum": [
                                                                    "protocol"
                                                                ]
                                                            }
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            "rLabel": {
                                "type": "string",
                                "title": "Custom label of the relationship",
                                "description": "Custom free-form label of the relationship, used to add extra details of the \\nrelationship if needed.",
                                "minLength": 1,
                                "examples": [
                                    "Source individual is the third child of the target individual",
                                    "Grouped samples by colour of the medium",
                                    "Both samples are the same because of an error in the submission at..."
                                ]
                            }
                        },
                        "oneOf": [
                            {
                                "title": "The source is given (i.e. the target is inferred as the current instance)",
                                "required": [
                                    "rSource"
                                ]
                            },
                            {
                                "title": "The target is given (i.e. the source is inferred as the current instance)",
                                "required": [
                                    "rTarget"
                                ]
                            }
                        ]
                    },
                    {
                        "title": "Relationship constraints for a study",
                        "description": "Not all possible relationships between objects are allowed (e.g. an individual \\nshould not be linked to a policy). This node contains the restricted \\nrelationships that can be given for a study.",
                        "anyOf": [
                            {
                                "title": "Allowed relationships of type referencedBy (main ones)",
                                "allOf": [
                                    {
                                        "type": "object",
                                        "title": "Relationship type: referencedBy",
                                        "description": "Node to be used as a relationship type for relationship contraints.",
                                        "required": [
                                            "rType"
                                        ],
                                        "properties": {
                                            "rType": {
                                                "const": "referencedBy"
                                            }
                                        }
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "type": "object",
                                                "title": "Relationship target: analysis",
                                                "description": "Node to be used as an object type for relationship contraints.",
                                                "required": [
                                                    "rTarget"
                                                ],
                                                "properties": {
                                                    "rTarget": {
                                                        "properties": {
                                                            "objectType": {
                                                                "const": "analysis"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "type": "object",
                                                "title": "Relationship target: experiment",
                                                "description": "Node to be used as an object type for relationship contraints.",
                                                "required": [
                                                    "rTarget"
                                                ],
                                                "properties": {
                                                    "rTarget": {
                                                        "properties": {
                                                            "objectType": {
                                                                "const": "experiment"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "type": "object",
                                                "title": "Relationship source: submission",
                                                "description": "Node to be used as an object type for relationship contraints.",
                                                "required": [
                                                    "rSource"
                                                ],
                                                "properties": {
                                                    "rSource": {
                                                        "properties": {
                                                            "objectType": {
                                                                "const": "submission"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "type": "object",
                                                "title": "Relationship source: protocol",
                                                "description": "Node to be used as an object type for relationship contraints.",
                                                "required": [
                                                    "rSource"
                                                ],
                                                "properties": {
                                                    "rSource": {
                                                        "properties": {
                                                            "objectType": {
                                                                "const": "protocol"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "title": "Allowed relationships of type groupedWith, isAfter, sameAs (optional ones)",
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "type": "object",
                                                "title": "Relationship type: groupedWith",
                                                "description": "Node to be used as a relationship type for relationship contraints.",
                                                "required": [
                                                    "rType"
                                                ],
                                                "properties": {
                                                    "rType": {
                                                        "const": "groupedWith"
                                                    }
                                                }
                                            },
                                            {
                                                "type": "object",
                                                "title": "Relationship type: isAfter",
                                                "description": "Node to be used as a relationship type for relationship contraints.",
                                                "required": [
                                                    "rType"
                                                ],
                                                "properties": {
                                                    "rType": {
                                                        "const": "isAfter"
                                                    }
                                                }
                                            },
                                            {
                                                "type": "object",
                                                "title": "Relationship type: sameAs",
                                                "description": "Node to be used as a relationship type for relationship contraints.",
                                                "required": [
                                                    "rType"
                                                ],
                                                "properties": {
                                                    "rType": {
                                                        "const": "sameAs"
                                                    }
                                                }
                                            }
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "type": "object",
                                                "title": "Relationship source: study",
                                                "description": "Node to be used as an object type for relationship contraints.",
                                                "required": [
                                                    "rSource"
                                                ],
                                                "properties": {
                                                    "rSource": {
                                                        "properties": {
                                                            "objectType": {
                                                                "const": "study"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "type": "object",
                                                "title": "Relationship target: study",
                                                "description": "Node to be used as an object type for relationship contraints.",
                                                "required": [
                                                    "rTarget"
                                                ],
                                                "properties": {
                                                    "rTarget": {
                                                        "properties": {
                                                            "objectType": {
                                                                "const": "study"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "title": "Relationships of external accessions and URLs (optional ones)",
                                "description": "Almost any relationship is imaginable with external accessions and URLs.",
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "type": "object",
                                                "title": "Relationship type: childOf",
                                                "description": "Node to be used as a relationship type for relationship contraints.",
                                                "required": [
                                                    "rType"
                                                ],
                                                "properties": {
                                                    "rType": {
                                                        "const": "childOf"
                                                    }
                                                }
                                            },
                                            {
                                                "type": "object",
                                                "title": "Relationship type: familyRelationshipWith",
                                                "description": "Node to be used as a relationship type for relationship contraints.",
                                                "required": [
                                                    "rType"
                                                ],
                                                "properties": {
                                                    "rType": {
                                                        "const": "familyRelationshipWith"
                                                    }
                                                }
                                            },
                                            {
                                                "type": "object",
                                                "title": "Relationship type: groupedWith",
                                                "description": "Node to be used as a relationship type for relationship contraints.",
                                                "required": [
                                                    "rType"
                                                ],
                                                "properties": {
                                                    "rType": {
                                                        "const": "groupedWith"
                                                    }
                                                }
                                            },
                                            {
                                                "type": "object",
                                                "title": "Relationship type: sameAs",
                                                "description": "Node to be used as a relationship type for relationship contraints.",
                                                "required": [
                                                    "rType"
                                                ],
                                                "properties": {
                                                    "rType": {
                                                        "const": "sameAs"
                                                    }
                                                }
                                            },
                                            {
                                                "type": "object",
                                                "title": "Relationship type: referencedBy",
                                                "description": "Node to be used as a relationship type for relationship contraints.",
                                                "required": [
                                                    "rType"
                                                ],
                                                "properties": {
                                                    "rType": {
                                                        "const": "referencedBy"
                                                    }
                                                }
                                            },
                                            {
                                                "type": "object",
                                                "title": "Relationship type: developsFrom",
                                                "description": "Node to be used as a relationship type for relationship contraints.",
                                                "required": [
                                                    "rType"
                                                ],
                                                "properties": {
                                                    "rType": {
                                                        "const": "developsFrom"
                                                    }
                                                }
                                            },
                                            {
                                                "type": "object",
                                                "title": "Relationship type: memberOf",
                                                "description": "Node to be used as a relationship type for relationship contraints.",
                                                "required": [
                                                    "rType"
                                                ],
                                                "properties": {
                                                    "rType": {
                                                        "const": "memberOf"
                                                    }
                                                }
                                            },
                                            {
                                                "type": "object",
                                                "title": "Relationship type: isAfter",
                                                "description": "Node to be used as a relationship type for relationship contraints.",
                                                "required": [
                                                    "rType"
                                                ],
                                                "properties": {
                                                    "rType": {
                                                        "const": "isAfter"
                                                    }
                                                }
                                            }
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "type": "object",
                                                "title": "Relationship source: externalAccession",
                                                "description": "Node to be used as an object type for relationship contraints.",
                                                "required": [
                                                    "rSource"
                                                ],
                                                "properties": {
                                                    "rSource": {
                                                        "properties": {
                                                            "objectType": {
                                                                "const": "externalAccession"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "type": "object",
                                                "title": "Relationship source: externalURL",
                                                "description": "Node to be used as an object type for relationship contraints.",
                                                "required": [
                                                    "rSource"
                                                ],
                                                "properties": {
                                                    "rSource": {
                                                        "properties": {
                                                            "objectType": {
                                                                "const": "externalURL"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "type": "object",
                                                "title": "Relationship target: externalAccession",
                                                "description": "Node to be used as an object type for relationship contraints.",
                                                "required": [
                                                    "rTarget"
                                                ],
                                                "properties": {
                                                    "rTarget": {
                                                        "properties": {
                                                            "objectType": {
                                                                "const": "externalAccession"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "type": "object",
                                                "title": "Relationship target: externalURL",
                                                "description": "Node to be used as an object type for relationship contraints.",
                                                "required": [
                                                    "rTarget"
                                                ],
                                                "properties": {
                                                    "rTarget": {
                                                        "properties": {
                                                            "objectType": {
                                                                "const": "externalURL"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "contains": {
                "title": "Relationship constraint of 1 submission as source",
                "description": "This node defines a relationship item containing a 'submission' as a source and \\nof type 'referencedBy'. This node can be used with the keyword 'contains' at \\neach relationship array of all objects (but submission), in order to assert that \\nall objects have a submission object (EGAB...) linked to them.",
                "allOf": [
                    {
                        "type": "object",
                        "title": "Relationship type: referencedBy",
                        "description": "Node to be used as a relationship type for relationship contraints.",
                        "required": [
                            "rType"
                        ],
                        "properties": {
                            "rType": {
                                "const": "referencedBy"
                            }
                        }
                    },
                    {
                        "type": "object",
                        "title": "Relationship source: submission",
                        "description": "Node to be used as an object type for relationship contraints.",
                        "required": [
                            "rSource"
                        ],
                        "properties": {
                            "rSource": {
                                "properties": {
                                    "objectType": {
                                        "const": "submission"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "studyAttributes": {
            "type": "array",
            "title": "Study custom attributes",
            "description": "Custom attributes of a study: reusable attributes to encode tag-value pairs \\n(e.g. Tag being 'Targeted loci' and its Value '5:63256183-63258334') with \\noptional units (e.g. 'base pairs'). Its properties are inherited from the \\ncommon-definitions.json schema.",
            "minItems": 1,
            "additionalProperties": false,
            "uniqueItems": true,
            "items": {
                "type": "object",
                "title": "Custom attribute of an object",
                "description": "Reusable attributes to encode tag-value pairs (e.g. Tag being 'Age' and its \\nValue '40') with optional units (e.g. 'years').",
                "required": [
                    "tag",
                    "value"
                ],
                "additionalProperties": false,
                "properties": {
                    "tag": {
                        "type": "string",
                        "title": "Tag of the custom attribute",
                        "description": "The name of the attribute (e.g. 'Age').",
                        "minLength": 1,
                        "examples": [
                            "age"
                        ]
                    },
                    "value": {
                        "type": [
                            "string",
                            "number"
                        ],
                        "title": "Value of the custom attribute",
                        "description": "The value of the attribute (e.g. '40').",
                        "examples": [
                            "smoker",
                            40
                        ]
                    },
                    "units": {
                        "type": "string",
                        "title": "Units of the custom attribute",
                        "description": "The optional units of the attribute (e.g. 'years').",
                        "minLength": 1,
                        "examples": [
                            "years"
                        ]
                    }
                }
            }
        }
    }
}
@endjson