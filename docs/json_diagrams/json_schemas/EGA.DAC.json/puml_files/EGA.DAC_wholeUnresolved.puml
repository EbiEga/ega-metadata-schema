@startjson

{
    "$schema": "https://json-schema.org/draft/2019-09/schema",
    "$id": "https://raw.githubusercontent.com/EbiEga/ega-metadata-schema/main/schemas/EGA.DAC.json",
    "type": "object",
    "title": "EGA DAC metadata schema",
    "meta:version": "0.0.0",
    "$async": true,
    "description": "Metadata schema used by the European Genome-phenome Archive (EGA) to validate \\nits Data Access Committee (DAC) metadata object. This object is intended to \\ncontain metadata about the body of one or more named individuals who are \\nresponsible for data release to external requestors based on consent and/or \\nNational Research Ethics terms. A DAC is typically formed, but not necessarily, \\nfrom the same organization that collected the samples and generated any \\nassociated files/analyses. Further details can be found in the \\nEGA-metadata-schema GitHub repository \\n(https://github.com/EbiEga/ega-metadata-schema/tree/main/schemas) and \\nEGA-archive website (https://ega-archive.org/submission/data_access_committee)",
    "required": [
        "objectId",
        "dacContacts"
    ],
    "additionalProperties": false,
    "properties": {
        "objectId": {
            "type": "object",
            "title": "Object's IDs block",
            "description": "Node containing the main identifiers of the object (e.g. alias, centerName...), \\ninherited from the common definitions. #! We extend the core object \\n(objectCoreId) by adding a pattern check based on this schema's nature: an DAC \\n(by using EGADACIdPattern)",
            "allOf": [
                {
                    "title": "Inherited objectCoreId object",
                    "$ref": "./EGA.common-definitions.json#/definitions/objectCoreId"
                },
                {
                    "title": "Check that DAC EGA ID (EGAC) is correct",
                    "properties": {
                        "egaAccession": {
                            "$ref": "./EGA.common-definitions.json#/definitions/EGADACIdPattern"
                        }
                    }
                }
            ]
        },
        "schemaDescriptor": {
            "title": "Schema descriptor node",
            "description": "Inherited schema descriptor node containing metadata about the schemas and \\nstandards used to create the JSON document itself.",
            "$ref": "./EGA.common-definitions.json#/definitions/schemaDescriptor"
        },
        "objectTitle": {
            "type": "string",
            "title": "Title of the DAC",
            "description": "Short free-form text that can be used to call out DAC records in searches or \\ndisplays.",
            "minLength": 1,
            "examples": [
                "EBI Consortium Data Access Committee"
            ]
        },
        "objectDescription": {
            "type": "string",
            "title": "Description of the DAC",
            "description": "An in-depth description of the DAC, including its overall purpose or nature of \\nstudies it governs.",
            "minLength": 1,
            "examples": [
                "EBI DAC governing data from projects related to human microbiome with data \\nprovenance..."
            ]
        },
        "dacContacts": {
            "type": "object",
            "title": "DAC contacts' details",
            "description": "Object containing the main contact's and optional additional contact's details.",
            "additionalProperties": false,
            "required": [
                "mainContact"
            ],
            "properties": {
                "mainContact": {
                    "title": "Main contact of the DAC",
                    "description": "The main contact of that DAC whose contact details will be used first to reach \\nthe DAC.",
                    "$ref": "./EGA.common-definitions.json#/definitions/contactDetails"
                },
                "additionalContacts": {
                    "type": "array",
                    "title": "Additional DAC contacts' details",
                    "description": "An array compromising additional contact details to use when in need to reach \\nthe DAC yet the main contact is unresponsive or does not exist.",
                    "minItems": 1,
                    "additionalProperties": false,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "./EGA.common-definitions.json#/definitions/contactDetails"
                    }
                }
            }
        },
        "dacRelationships": {
            "type": "array",
            "title": "DAC relationships",
            "description": "Comprises metadata (e.g. Source or Target) of a directional association between \\ntwo entities. This relationships node contains all the possible relationships \\nbetween metadata objects, both outside of (e.g. an Array Design Format that was \\nsubmitted to ArrayExpress being linked to their microarray data within EGA) and \\nwithin (e.g. a policy being linked to a DAC) the EGA.",
            "minItems": 1,
            "additionalProperties": false,
            "uniqueItems": true,
            "items": {
                "allOf": [
                    {
                        "title": "Inherited relationship node",
                        "$ref": "./EGA.common-definitions.json#/definitions/relationshipObject"
                    },
                    {
                        "title": "Relationship constraints for a DAC",
                        "description": "Not all possible relationships between objects are allowed (e.g. an individual \\nshould not be linked to a policy). This node contains the restricted \\nrelationships that can be given for a DAC.",
                        "anyOf": [
                            {
                                "title": "Allowed relationships of type referencedBy (main ones)",
                                "allOf": [
                                    {
                                        "$ref": "./EGA.common-definitions.json#/definitions/rTypeReferencedBy"
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "$ref": "./EGA.common-definitions.json#/definitions/rTargetPolicy"
                                            },
                                            {
                                                "$ref": "./EGA.common-definitions.json#/definitions/rSourceSubmission"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "title": "Allowed relationships of type sameAs, groupedWith and memberOf (optional ones)",
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "$ref": "./EGA.common-definitions.json#/definitions/rTypeSameAs"
                                            },
                                            {
                                                "$ref": "./EGA.common-definitions.json#/definitions/rTypeGroupedWith"
                                            },
                                            {
                                                "$ref": "./EGA.common-definitions.json#/definitions/rTypeMemberOf"
                                            }
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "$ref": "./EGA.common-definitions.json#/definitions/rSourceDAC"
                                            },
                                            {
                                                "$ref": "./EGA.common-definitions.json#/definitions/rTargetDAC"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "title": "Relationships of external accessions and URLs (optional ones)",
                                "description": "Almost any relationship is imaginable with external accessions and URLs.",
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "$ref": "./EGA.common-definitions.json#/definitions/rTypeChildOf"
                                            },
                                            {
                                                "$ref": "./EGA.common-definitions.json#/definitions/rTypeFamilyRelationshipWith"
                                            },
                                            {
                                                "$ref": "./EGA.common-definitions.json#/definitions/rTypeGroupedWith"
                                            },
                                            {
                                                "$ref": "./EGA.common-definitions.json#/definitions/rTypeSameAs"
                                            },
                                            {
                                                "$ref": "./EGA.common-definitions.json#/definitions/rTypeReferencedBy"
                                            },
                                            {
                                                "$ref": "./EGA.common-definitions.json#/definitions/rTypeDevelopsFrom"
                                            },
                                            {
                                                "$ref": "./EGA.common-definitions.json#/definitions/rTypeMemberOf"
                                            },
                                            {
                                                "$ref": "./EGA.common-definitions.json#/definitions/rTypeIsAfter"
                                            }
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "$ref": "./EGA.common-definitions.json#/definitions/rSourceExternalAccession"
                                            },
                                            {
                                                "$ref": "./EGA.common-definitions.json#/definitions/rSourceExternalURL"
                                            },
                                            {
                                                "$ref": "./EGA.common-definitions.json#/definitions/rTargetExternalAccession"
                                            },
                                            {
                                                "$ref": "./EGA.common-definitions.json#/definitions/rTargetExternalURL"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "contains": {
                "title": "Constraint to have at least one 'submission' relationship",
                "$ref": "./EGA.common-definitions.json#/definitions/rConstraintOneSourcedSubmission"
            }
        },
        "dacAttributes": {
            "type": "array",
            "title": "DAC custom attributes",
            "description": "Custom attributes of a DAC: reusable attributes to encode tag-value pairs (e.g. \\nTag being 'Targeted loci' and its Value '5:63256183-63258334') with optional \\nunits (e.g. 'base pairs'). Its properties are inherited from the \\ncommon-definitions.json schema.",
            "minItems": 1,
            "additionalProperties": false,
            "uniqueItems": true,
            "items": {
                "$ref": "./EGA.common-definitions.json#/definitions/customAttribute"
            }
        }
    }
}
@endjson